#!/bin/bash

# Git Hook for SwiftLint 
# Runs at every commit and checks for an error.
# For the test, you can run `git commit` with an empty` commit message`

LINT=swiftlint

run_swiftlint() {
    local filename="${1}"
    if [[ "${filename##*.}" == "swift" ]]; then
        RESULT=$($LINT lint --quiet "${filename}")

		if [ -n "$RESULT" ]; then
		printf "SwiftLint Failed. Please check below:\n"
		while read -r line; do
				FILEPATH=$(echo $line | cut -d : -f 1)
				L=$(echo $line | cut -d : -f 2)
				C=$(echo $line | cut -d : -f 3)
				TYPE=$(echo $line | cut -d : -f 4 | cut -c 2-)
				MESSAGE=$(echo $line | cut -d : -f 5 | cut -c 2-)
				DESCRIPTION=$(echo $line | cut -d : -f 6 | cut -c 2-)
		printf "\n $TYPE\n"
		printf "    $FILEPATH:$L:$C\n"
		printf "    $MESSAGE - $DESCRIPTION\n"
		done <<< "$RESULT"
		printf "\nCOMMIT ABORTED. Please fix them before commiting.\n"
		exit 1
		fi
    fi
}


echo "SwiftLint Start..."
git diff --cached --name-only --diff-filter=M | while read filename; do run_swiftlint "${filename}"; done